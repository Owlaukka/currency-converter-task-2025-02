server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # API reverse proxy
    location /api/ {
        proxy_pass ${BACKEND_URL}/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # No cache for index.html
    location = /index.html {
        expires 0;
        etag on;
        add_header Cache-Control "public, max-age=0, must-revalidate";
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self';
            style-src 'self';
            img-src 'self';
            font-src 'self';
            frame-ancestors 'none';
            upgrade-insecure-requests;
            block-all-mixed-content;
        " always;
    }

    # Cache static assets
    location ~* \.(js|css)$ {
        gzip_static on;
        expires max;
        add_header Cache-Control "public, no-transform, max-age=31536000";
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self';
            style-src 'self';
            img-src 'self';
            font-src 'self';
            frame-ancestors 'none';
            upgrade-insecure-requests;
            block-all-mixed-content;
        " always;
    }

    # Serve static files
    location / {
        try_files $uri $uri/ /index.html;
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self';
            style-src 'self';
            img-src 'self';
            font-src 'self';
            frame-ancestors 'none';
            upgrade-insecure-requests;
            block-all-mixed-content;
        " always;
    }

    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self';
        style-src 'self';
        img-src 'self';
        font-src 'self';
        frame-ancestors 'none';
        upgrade-insecure-requests;
        block-all-mixed-content;
    " always;
}
